{"version":3,"sources":["../../src/decorator/typechecker/IsDate.ts"],"names":[],"mappings":";;AACA,4CAAuD;AAE1C,QAAA,OAAO,GAAG,QAAQ,CAAC;AAEhC;;GAEG;AACH,gBAAuB,KAAU;IAC7B,OAAO,KAAK,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;AAC5D,CAAC;AAFD,wBAEC;AAED;;GAEG;AACH,gBAAuB,iBAAqC;IACxD,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,eAAO;QACb,QAAQ,EAAE,UAAC,KAAK,IAAK,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,CAAa;QAClC,cAAc,EAAE,yBAAY,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,mCAAmC,EAAhD,CAAgD,EAAE,iBAAiB,CAAC;KACpH,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AARD,wBAQC","file":"IsDate.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\n\nexport const IS_DATE = \"isDate\";\n\n/**\n * Checks if a given value is a real date.\n */\nexport function isDate(value: any): boolean {\n    return value instanceof Date && !isNaN(value.getTime());\n}\n\n/**\n * Checks if a value is a date.\n */\nexport function IsDate(validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: IS_DATE,\n            validate: (value) => isDate(value),\n            defaultMessage: buildMessage((eachPrefix) => eachPrefix + \"$property must be a Date instance\", validationOptions)\n        },\n        validationOptions\n    );\n}\n"],"sourceRoot":"../.."}