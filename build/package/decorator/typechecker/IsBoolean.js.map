{"version":3,"sources":["../../src/decorator/typechecker/IsBoolean.ts"],"names":[],"mappings":";;AACA,4CAAuD;AAE1C,QAAA,UAAU,GAAG,WAAW,CAAC;AAEtC;;GAEG;AACH,mBAA0B,KAAU;IAChC,OAAO,KAAK,YAAY,OAAO,IAAI,OAAO,KAAK,KAAK,SAAS,CAAC;AAClE,CAAC;AAFD,8BAEC;AAED;;GAEG;AACH,mBAA0B,iBAAqC;IAC3D,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,kBAAU;QAChB,QAAQ,EAAE,UAAC,KAAK,IAAK,OAAA,SAAS,CAAC,KAAK,CAAC,EAAhB,CAAgB;QACrC,cAAc,EAAE,yBAAY,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,mCAAmC,EAAhD,CAAgD,EAAE,iBAAiB,CAAC;KACpH,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AARD,8BAQC","file":"IsBoolean.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\n\nexport const IS_BOOLEAN = \"isBoolean\";\n\n/**\n * Checks if a given value is a real boolean.\n */\nexport function isBoolean(value: any): boolean {\n    return value instanceof Boolean || typeof value === \"boolean\";\n}\n\n/**\n * Checks if a value is a boolean.\n */\nexport function IsBoolean(validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: IS_BOOLEAN,\n            validate: (value) => isBoolean(value),\n            defaultMessage: buildMessage((eachPrefix) => eachPrefix + \"$property must be a boolean value\", validationOptions)\n        },\n        validationOptions\n    );\n}\n"],"sourceRoot":"../.."}