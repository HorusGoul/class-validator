{"version":3,"sources":["../../src/decorator/string/IsHalfWidth.ts"],"names":[],"mappings":";;AACA,4CAAuD;AACvD,2BAA2B;AAC3B,IAAM,sBAAsB,GAA4B,OAAO,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC;AAExF,QAAA,aAAa,GAAG,aAAa,CAAC;AAE3C;;;GAGG;AACH,qBAA4B,KAAa;IACrC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,sBAAsB,CAAC,KAAK,CAAC,CAAC;AACtE,CAAC;AAFD,kCAEC;AAED;;GAEG;AACH,qBAA4B,iBAAqC;IAC7D,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,qBAAa;QACnB,QAAQ,EAAE,UAAC,KAAK,IAAK,OAAA,WAAW,CAAC,KAAK,CAAC,EAAlB,CAAkB;QACvC,cAAc,EAAE,yBAAY,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,gDAAgD,EAA7D,CAA6D,EAAE,iBAAiB,CAAC;KACjI,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AARD,kCAQC","file":"IsHalfWidth.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\n// strange module export :(\nconst validatorJsIsHalfWidth: (value: any) => boolean = require(\"validator/lib/isHalfWidth\").default;\n\nexport const IS_HALF_WIDTH = \"isHalfWidth\";\n\n/**\n * Checks if the string contains any half-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isHalfWidth(value: string): boolean {\n    return typeof value === \"string\" && validatorJsIsHalfWidth(value);\n}\n\n/**\n * Checks if the string contains any half-width chars.\n */\nexport function IsHalfWidth(validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: IS_HALF_WIDTH,\n            validate: (value) => isHalfWidth(value),\n            defaultMessage: buildMessage((eachPrefix) => eachPrefix + \"$property must contain a half-width characters\", validationOptions)\n        },\n        validationOptions\n    );\n}\n"],"sourceRoot":"../.."}