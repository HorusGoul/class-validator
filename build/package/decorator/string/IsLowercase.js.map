{"version":3,"sources":["../../src/decorator/string/IsLowercase.ts"],"names":[],"mappings":";;AACA,4CAAuD;AACvD,kEAAqE;AAExD,QAAA,YAAY,GAAG,aAAa,CAAC;AAE1C;;;GAGG;AACH,qBAA4B,KAAa;IACrC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,sBAAsB,CAAC,KAAK,CAAC,CAAC;AACtE,CAAC;AAFD,kCAEC;AAED;;GAEG;AACH,qBAA4B,iBAAqC;IAC7D,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,oBAAY;QAClB,QAAQ,EAAE,UAAC,KAAK,IAAK,OAAA,WAAW,CAAC,KAAK,CAAC,EAAlB,CAAkB;QACvC,cAAc,EAAE,yBAAY,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,sCAAsC,EAAnD,CAAmD,EAAE,iBAAiB,CAAC;KACvH,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AARD,kCAQC","file":"IsLowercase.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\nimport validatorJsIsLowercase = require(\"validator/lib/isLowercase\");\n\nexport const IS_LOWERCASE = \"isLowercase\";\n\n/**\n * Checks if the string is lowercase.\n * If given value is not a string, then it returns false.\n */\nexport function isLowercase(value: string): boolean {\n    return typeof value === \"string\" && validatorJsIsLowercase(value);\n}\n\n/**\n * Checks if the string is lowercase.\n */\nexport function IsLowercase(validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: IS_LOWERCASE,\n            validate: (value) => isLowercase(value),\n            defaultMessage: buildMessage((eachPrefix) => eachPrefix + \"$property must be a lowercase string\", validationOptions)\n        },\n        validationOptions\n    );\n}\n"],"sourceRoot":"../.."}