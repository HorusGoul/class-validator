{"version":3,"sources":["../../src/decorator/string/IsCreditCard.ts"],"names":[],"mappings":";;AACA,4CAAuD;AACvD,oEAAuE;AAE1D,QAAA,cAAc,GAAG,cAAc,CAAC;AAE7C;;;GAGG;AACH,sBAA6B,KAAa;IACtC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,uBAAuB,CAAC,KAAK,CAAC,CAAC;AACvE,CAAC;AAFD,oCAEC;AAGD;;GAEG;AACH,sBAA6B,iBAAqC;IAC9D,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,sBAAc;QACpB,QAAQ,EAAE,UAAC,KAAK,IAAK,OAAA,YAAY,CAAC,KAAK,CAAC,EAAnB,CAAmB;QACxC,cAAc,EAAE,yBAAY,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,iCAAiC,EAA9C,CAA8C,EAAE,iBAAiB,CAAC;KAClH,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AARD,oCAQC","file":"IsCreditCard.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\nimport validatorJsIsCreditCard = require(\"validator/lib/isCreditCard\");\n\nexport const IS_CREDIT_CARD = \"isCreditCard\";\n\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function isCreditCard(value: string): boolean {\n    return typeof value === \"string\" && validatorJsIsCreditCard(value);\n}\n\n\n/**\n * Checks if the string is a credit card.\n */\nexport function IsCreditCard(validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: IS_CREDIT_CARD,\n            validate: (value) => isCreditCard(value),\n            defaultMessage: buildMessage((eachPrefix) => eachPrefix + \"$property must be a credit card\", validationOptions)\n        },\n        validationOptions\n    );\n}\n"],"sourceRoot":"../.."}