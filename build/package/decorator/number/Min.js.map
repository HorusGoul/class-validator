{"version":3,"sources":["../../src/decorator/number/Min.ts"],"names":[],"mappings":";;AACA,4CAAuD;AAE1C,QAAA,GAAG,GAAG,KAAK,CAAC;AAEzB;;GAEG;AACH,aAAoB,GAAW,EAAE,SAAiB;IAC9C,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,GAAG,IAAI,SAAS,CAAC;AACxF,CAAC;AAFD,kBAEC;AAED;;GAEG;AACH,aAAoB,SAAiB,EAAE,iBAAqC;IACxE,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,WAAG;QACT,QAAQ,EAAE,UAAC,KAAK,EAAE,IAAI,IAAK,OAAA,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAA/B,CAA+B;QAC1D,WAAW,EAAE,CAAC,SAAS,CAAC;QACxB,cAAc,EAAE,yBAAY,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,8CAA8C,EAA3D,CAA2D,EAAE,iBAAiB,CAAC;KAC/H,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AATD,kBASC","file":"Min.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\n\nexport const MIN = \"min\";\n\n/**\n * Checks if the first number is greater than or equal to the second/reference.\n */\nexport function min(num: number, reference: number): boolean {\n    return typeof num === \"number\" && typeof reference === \"number\" && num >= reference;\n}\n\n/**\n * Checks if the given number is greater than or equal to reference number.\n */\nexport function Min(reference: number, validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: MIN,\n            validate: (value, args) => min(value, args.constraints[0]),\n            constraints: [reference],\n            defaultMessage: buildMessage((eachPrefix) => eachPrefix + \"$property must not be less than $constraint1\", validationOptions)\n        },\n        validationOptions\n    );\n}\n"],"sourceRoot":"../.."}