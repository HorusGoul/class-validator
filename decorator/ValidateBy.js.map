{"version":3,"sources":["../../src/decorator/ValidateBy.ts"],"names":[],"mappings":";;AAEA,4DAAwD;AAIxD,sBACI,IAAgE,EAChE,iBAAqC;IAErC,OAAO,UAAC,mBAAyC;QAC7C,IAAM,UAAU,GAAG,iBAAiB,IAAI,iBAAiB,CAAC,IAAI;YAC1D,CAAC,CAAC,gBAAgB;YAClB,CAAC,CAAC,EAAE,CAAC;QACT,OAAO,IAAI,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;IACjD,CAAC,CAAC;AACN,CAAC;AAVD,oCAUC;AAED,oBAA2B,SAA6B,EAAE,iBAAqC;IAC3F,OAAO,UAAU,MAAc,EAAE,YAAoB;QACjD,sCAAiB,CAAC;YACd,IAAI,EAAE,SAAS,CAAC,IAAI;YACpB,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,OAAO,EAAE,iBAAiB;YAC1B,WAAW,EAAE,SAAS,CAAC,WAAW;YAClC,SAAS,EAAiC;gBACtC,QAAQ,EAAE,SAAS,CAAC,QAAQ;gBAC5B,cAAc,EAAE,SAAS,CAAC,cAAc;aAC3C;SACJ,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAdD,gCAcC","file":"ValidateBy.js","sourcesContent":["import {ValidationFunction} from \"./ValidationFunction\";\nimport {ValidationOptions} from \"./ValidationOptions\";\nimport {registerDecorator} from \"../register-decorator\";\nimport {ValidationArguments} from \"../validation/ValidationArguments\";\nimport {ValidatorConstraintInterface} from \"../validation/ValidatorConstraintInterface\";\n\nexport function buildMessage(\n    impl: (eachPrefix: string, args?: ValidationArguments) => string,\n    validationOptions?: ValidationOptions)\n    : (validationArguments?: ValidationArguments) => string {\n    return (validationArguments?: ValidationArguments) => {\n        const eachPrefix = validationOptions && validationOptions.each\n            ? \"each value in \"\n            : \"\";\n        return impl(eachPrefix, validationArguments);\n    };\n}\n\nexport function ValidateBy(validator: ValidationFunction, validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        registerDecorator({\n            name: validator.name,\n            target: object.constructor,\n            propertyName: propertyName,\n            options: validationOptions,\n            constraints: validator.constraints,\n            validator: <ValidatorConstraintInterface> {\n                validate: validator.validate,\n                defaultMessage: validator.defaultMessage\n            }\n        });\n    };\n}\n"],"sourceRoot":".."}