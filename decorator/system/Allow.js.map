{"version":3,"sources":["../../src/decorator/system/Allow.ts"],"names":[],"mappings":";;AAEA,oEAAiE;AACjE,6CAAiD;AACjD,kEAA+D;AAC/D,wEAAqE;AAGrE;;GAEG;AACH,eAAsB,iBAAqC;IACvD,OAAO,UAAU,MAAc,EAAE,YAAoB;QACjD,IAAM,IAAI,GAA2B;YACjC,IAAI,EAAE,iCAAe,CAAC,SAAS;YAC/B,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,iBAAiB,EAAE,iBAAiB;SACvC,CAAC;QACF,4BAAgB,CAAC,iCAAe,CAAC,CAAC,qBAAqB,CAAC,IAAI,uCAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1F,CAAC,CAAC;AACN,CAAC;AAVD,sBAUC","file":"Allow.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {ValidationMetadataArgs} from \"../../metadata/ValidationMetadataArgs\";\nimport {ValidationTypes} from \"../../validation/ValidationTypes\";\nimport {getFromContainer} from \"../../container\";\nimport {MetadataStorage} from \"../../metadata/MetadataStorage\";\nimport {ValidationMetadata} from \"../../metadata/ValidationMetadata\";\n\n\n/**\n * If object has both allowed and not allowed properties a validation error will be thrown.\n */\nexport function Allow(validationOptions?: ValidationOptions) {\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.WHITELIST,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: validationOptions\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n"],"sourceRoot":"../.."}