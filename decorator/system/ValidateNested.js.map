{"version":3,"sources":["../../src/decorator/system/ValidateNested.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,oEAAiE;AACjE,6CAAiD;AACjD,kEAA+D;AAC/D,wEAAqE;AAErE;;GAEG;AACH,wBAA+B,iBAAqC;IAChE,IAAM,IAAI,gBAA0B,iBAAiB,CAAC,CAAC;IACvD,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC;IACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,UAAU,GAAG,0DAA0D,CAAC;IAEvG,OAAO,UAAU,MAAc,EAAE,YAAoB;QACjD,IAAM,IAAI,GAA2B;YACjC,IAAI,EAAE,iCAAe,CAAC,iBAAiB;YACvC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,iBAAiB,EAAE,IAAI;SAC1B,CAAC;QACF,4BAAgB,CAAC,iCAAe,CAAC,CAAC,qBAAqB,CAAC,IAAI,uCAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1F,CAAC,CAAC;AACN,CAAC;AAdD,wCAcC","file":"ValidateNested.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {ValidationMetadataArgs} from \"../../metadata/ValidationMetadataArgs\";\nimport {ValidationTypes} from \"../../validation/ValidationTypes\";\nimport {getFromContainer} from \"../../container\";\nimport {MetadataStorage} from \"../../metadata/MetadataStorage\";\nimport {ValidationMetadata} from \"../../metadata/ValidationMetadata\";\n\n/**\n * Objects / object arrays marked with this decorator will also be validated.\n */\nexport function ValidateNested(validationOptions?: ValidationOptions) {\n    const opts: ValidationOptions = {...validationOptions};\n    const eachPrefix = opts.each ? \"each value in \" : \"\";\n    opts.message = opts.message || eachPrefix + \"nested property $property must be either object or array\";\n\n    return function (object: Object, propertyName: string) {\n        const args: ValidationMetadataArgs = {\n            type: ValidationTypes.NESTED_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: opts,\n        };\n        getFromContainer(MetadataStorage).addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n"],"sourceRoot":"../.."}