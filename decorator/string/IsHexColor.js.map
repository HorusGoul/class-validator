{"version":3,"sources":["../../src/decorator/string/IsHexColor.ts"],"names":[],"mappings":";;AACA,4CAAuD;AACvD,gEAAmE;AAEtD,QAAA,YAAY,GAAG,YAAY,CAAC;AAEzC;;;GAGG;AACH,oBAA2B,KAAa;IACpC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,qBAAqB,CAAC,KAAK,CAAC,CAAC;AACrE,CAAC;AAFD,gCAEC;AAED;;GAEG;AACH,oBAA2B,iBAAqC;IAC5D,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,oBAAY;QAClB,QAAQ,EAAE,UAAC,KAAK,IAAK,OAAA,UAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB;QACtC,cAAc,EAAE,yBAAY,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,uCAAuC,EAApD,CAAoD,EAAE,iBAAiB,CAAC;KACxH,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AARD,gCAQC","file":"IsHexColor.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\nimport validatorJsIsHexColor = require(\"validator/lib/isHexColor\");\n\nexport const IS_HEX_COLOR = \"isHexColor\";\n\n/**\n * Checks if the string is a hexadecimal color.\n * If given value is not a string, then it returns false.\n */\nexport function isHexColor(value: string): boolean {\n    return typeof value === \"string\" && validatorJsIsHexColor(value);\n}\n\n/**\n * Checks if the string is a hexadecimal color.\n */\nexport function IsHexColor(validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: IS_HEX_COLOR,\n            validate: (value) => isHexColor(value),\n            defaultMessage: buildMessage((eachPrefix) => eachPrefix + \"$property must be a hexadecimal color\", validationOptions)\n        },\n        validationOptions\n    );\n}\n"],"sourceRoot":"../.."}