{"version":3,"sources":["../../src/decorator/string/NotContains.ts"],"names":[],"mappings":";;AACA,4CAAuD;AACvD,uCAAoC;AAEvB,QAAA,YAAY,GAAG,aAAa,CAAC;AAE1C;;;GAGG;AACH,qBAA4B,KAAa,EAAE,IAAY;IACnD,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,mBAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC/D,CAAC;AAFD,kCAEC;AAED;;GAEG;AACH,qBAA4B,IAAY,EAAE,iBAAqC;IAC3E,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,oBAAY;QAClB,QAAQ,EAAE,UAAC,KAAK,EAAE,IAAI,IAAK,OAAA,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAvC,CAAuC;QAClE,WAAW,EAAE,CAAC,IAAI,CAAC;QACnB,cAAc,EAAE,yBAAY,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,oDAAoD,EAAjE,CAAiE,EAAE,iBAAiB,CAAC;KACrI,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AATD,kCASC","file":"NotContains.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\nimport {contains} from \"./Contains\";\n\nexport const NOT_CONTAINS = \"notContains\";\n\n/**\n * Checks if the string does not contain the seed.\n * If given value is not a string, then it returns false.\n */\nexport function notContains(value: string, seed: string): boolean {\n    return typeof value === \"string\" && !contains(value, seed);\n}\n\n/**\n * Checks if the string does not contain the seed.\n */\nexport function NotContains(seed: string, validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: NOT_CONTAINS,\n            validate: (value, args) => notContains(value, args.constraints[0]),\n            constraints: [seed],\n            defaultMessage: buildMessage((eachPrefix) => eachPrefix + \"$property should not contain a $constraint1 string\", validationOptions)\n        },\n        validationOptions\n    );\n}\n"],"sourceRoot":"../.."}