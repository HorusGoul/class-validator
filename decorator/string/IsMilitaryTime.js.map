{"version":3,"sources":["../../src/decorator/string/IsMilitaryTime.ts"],"names":[],"mappings":";;AACA,4CAAuD;AACvD,qCAAkC;AAErB,QAAA,gBAAgB,GAAG,gBAAgB,CAAC;AAEjD;;;GAGG;AACH,wBAA+B,KAAa;IACxC,OAAO,iBAAO,CAAC,KAAK,EAAE,8BAA8B,CAAC,CAAC;AAC1D,CAAC;AAFD,wCAEC;AAGD;;GAEG;AACH,wBAA+B,iBAAqC;IAChE,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,wBAAgB;QACtB,QAAQ,EAAE,UAAC,KAAK,IAAK,OAAA,cAAc,CAAC,KAAK,CAAC,EAArB,CAAqB;QAC1C,cAAc,EAAE,yBAAY,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,mCAAmC,EAAhD,CAAgD,EAAE,iBAAiB,CAAC;KACpH,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AARD,wCAQC","file":"IsMilitaryTime.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\nimport {matches} from \"./Matches\";\n\nexport const IS_MILITARY_TIME = \"isMilitaryTime\";\n\n/**\n * Checks if the string represents a time without a given timezone in the format HH:MM (military)\n * If the given value does not match the pattern HH:MM, then it returns false.\n */\nexport function isMilitaryTime(value: string): boolean {\n    return matches(value, /^([01]\\d|2[0-3]):?([0-5]\\d)$/);\n}\n\n\n/**\n * Checks if the string correctly represents a time in the format HH:MM\n */\nexport function IsMilitaryTime(validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: IS_MILITARY_TIME,\n            validate: (value) => isMilitaryTime(value),\n            defaultMessage: buildMessage((eachPrefix) => eachPrefix + \"$property must be a military time\", validationOptions)\n        },\n        validationOptions\n    );\n}\n"],"sourceRoot":"../.."}