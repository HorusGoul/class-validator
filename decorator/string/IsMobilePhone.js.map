{"version":3,"sources":["../../src/decorator/string/IsMobilePhone.ts"],"names":[],"mappings":";;AACA,4CAAuD;AACvD,sEAAyE;AAE5D,QAAA,eAAe,GAAG,eAAe,CAAC;AAE/C;;;GAGG;AACH,uBAA8B,KAAa,EAAE,MAA+E;IACxH,yGAAyG;IACzG,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,wBAAwB,CAAC,KAAK,EAAE,MAAa,CAAC,CAAC;AACvF,CAAC;AAHD,sCAGC;AAED;;GAEG;AACH,uBAA8B,MAA6E,EAAE,iBAAqC;IAC9I,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,uBAAe;QACrB,QAAQ,EAAE,UAAC,KAAK,EAAE,IAAI,IAAK,OAAA,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAzC,CAAyC;QACpE,WAAW,EAAE,CAAC,MAAM,CAAC;QACrB,cAAc,EAAE,yBAAY,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,kCAAkC,EAA/C,CAA+C,EAAE,iBAAiB,CAAC;KACnH,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AATD,sCASC","file":"IsMobilePhone.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\nimport validatorJsIsMobilePhone = require(\"validator/lib/isMobilePhone\");\n\nexport const IS_MOBILE_PHONE = \"isMobilePhone\";\n\n/**\n * Checks if the string is a mobile phone number. See ValidatorJS for a list of supported locales!\n * If given value is not a string, then it returns false.\n */\nexport function isMobilePhone(value: string, locale: ValidatorJS.MobilePhoneLocale | ValidatorJS.MobilePhoneLocale[] | \"any\"): boolean {\n    // typings are wrong: current ValidatorJS.isMobilePhone supports both one locale and an array of locales!\n    return typeof value === \"string\" && validatorJsIsMobilePhone(value, locale as any);\n}\n\n/**\n * Checks if the string is a mobile phone number. See ValidatorJS for a list of supported locales!\n */\nexport function IsMobilePhone(locale: ValidatorJS.MobilePhoneLocale | ValidatorJS.MobilePhoneLocale[] | any, validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: IS_MOBILE_PHONE,\n            validate: (value, args) => isMobilePhone(value, args.constraints[0]),\n            constraints: [locale],\n            defaultMessage: buildMessage((eachPrefix) => eachPrefix + \"$property must be a phone number\", validationOptions)\n        },\n        validationOptions\n    );\n}\n\n"],"sourceRoot":"../.."}