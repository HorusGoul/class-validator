{"version":3,"sources":["../../src/decorator/common/IsNotIn.ts"],"names":[],"mappings":";;AACA,4CAAuD;AAE1C,QAAA,SAAS,GAAG,SAAS,CAAC;AAEnC;;GAEG;AACH,iBAAwB,KAAU,EAAE,cAAqB;IACrD,OAAO,CAAC,CAAC,cAAc,YAAY,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAA,aAAa,IAAI,OAAA,aAAa,KAAK,KAAK,EAAvB,CAAuB,CAAC,CAAC;AAChH,CAAC;AAFD,0BAEC;AAED;;GAEG;AACH,iBAAwB,MAAa,EAAE,iBAAqC;IACxE,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,iBAAS;QACf,QAAQ,EAAE,UAAC,KAAK,EAAE,IAAI,IAAK,OAAA,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAnC,CAAmC;QAC9D,WAAW,EAAE,CAAC,MAAM,CAAC;QACrB,cAAc,EAAE,yBAAY,CACxB,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,mEAAmE,EAAhF,CAAgF,EAChG,iBAAiB,CAAC;KAEzB,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AAZD,0BAYC","file":"IsNotIn.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\n\nexport const IS_NOT_IN = \"isNotIn\";\n\n/**\n * Checks if given value not in a array of allowed values.\n */\nexport function isNotIn(value: any, possibleValues: any[]): boolean {\n    return !(possibleValues instanceof Array) || !possibleValues.some(possibleValue => possibleValue === value);\n}\n\n/**\n * Checks if value is not in a array of disallowed values.\n */\nexport function IsNotIn(values: any[], validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: IS_NOT_IN,\n            validate: (value, args) => isNotIn(value, args.constraints[0]),\n            constraints: [values],\n            defaultMessage: buildMessage(\n                (eachPrefix) => eachPrefix + \"$property should not be one of the following values: $constraint1\",\n                validationOptions),\n\n        },\n        validationOptions\n    );\n}\n"],"sourceRoot":"../.."}