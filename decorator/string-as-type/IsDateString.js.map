{"version":3,"sources":["../../src/decorator/string-as-type/IsDateString.ts"],"names":[],"mappings":";;AACA,4CAAuD;AACvD,oDAAiD;AAEpC,QAAA,cAAc,GAAG,cAAc,CAAC;AAE7C;;GAEG;AACH,sBAA6B,KAAU;IACnC,IAAM,KAAK,GAAG,yFAAyF,CAAC;IACxG,OAAO,mBAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChD,CAAC;AAHD,oCAGC;AAED,sBAA6B,iBAAqC;IAC9D,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,sBAAc;QACpB,QAAQ,EAAE,UAAC,KAAK,IAAK,OAAA,YAAY,CAAC,KAAK,CAAC,EAAnB,CAAmB;QACxC,cAAc,EAAE,yBAAY,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,+BAA+B,EAA5C,CAA4C,EAAE,iBAAiB,CAAC;KAChH,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AARD,oCAQC","file":"IsDateString.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\nimport {isString} from \"../typechecker/IsString\";\n\nexport const IS_DATE_STRING = \"isDateString\";\n\n/**\n * Checks if a given value is a ISOString date.\n */\nexport function isDateString(value: any): boolean {\n    const regex = /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:Z|\\+[0-2]\\d(?:\\:[0-5]\\d)?)?$/g;\n    return isString(value) && regex.test(value);\n}\n\nexport function IsDateString(validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: IS_DATE_STRING,\n            validate: (value) => isDateString(value),\n            defaultMessage: buildMessage((eachPrefix) => eachPrefix + \"$property must be a ISOString\", validationOptions)\n        },\n        validationOptions\n    );\n}\n"],"sourceRoot":"../.."}