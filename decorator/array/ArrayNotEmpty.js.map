{"version":3,"sources":["../../src/decorator/array/ArrayNotEmpty.ts"],"names":[],"mappings":";;AACA,4CAAuD;AAE1C,QAAA,eAAe,GAAG,eAAe,CAAC;AAE/C;;;GAGG;AACH,uBAA8B,KAAY;IACtC,IAAI,CAAC,CAAC,KAAK,YAAY,KAAK,CAAC,EAAE;QAC3B,OAAO,KAAK,CAAC;KAChB;IAED,OAAO,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACtD,CAAC;AAND,sCAMC;AAED;;GAEG;AACH,uBAA8B,iBAAqC;IAC/D,OAAO,uBAAU,CAAC;QACV,IAAI,EAAE,uBAAe;QACrB,QAAQ,EAAE,UAAC,KAAK,IAAK,OAAA,aAAa,CAAC,KAAK,CAAC,EAApB,CAAoB;QACzC,cAAc,EAAE,yBAAY,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,GAAG,+BAA+B,EAA5C,CAA4C,EAAE,iBAAiB,CAAC;KAChH,EACD,iBAAiB,CACpB,CAAC;AACN,CAAC;AARD,sCAQC","file":"ArrayNotEmpty.js","sourcesContent":["import {ValidationOptions} from \"../ValidationOptions\";\nimport {buildMessage, ValidateBy} from \"../ValidateBy\";\n\nexport const ARRAY_NOT_EMPTY = \"arrayNotEmpty\";\n\n/**\n * Checks if given array is not empty.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayNotEmpty(array: any[]) {\n    if (!(array instanceof Array)) {\n        return false;\n    }\n\n    return array instanceof Array && array.length > 0;\n}\n\n/**\n * Checks if given array is not empty.\n */\nexport function ArrayNotEmpty(validationOptions?: ValidationOptions) {\n    return ValidateBy({\n            name: ARRAY_NOT_EMPTY,\n            validate: (value) => arrayNotEmpty(value),\n            defaultMessage: buildMessage((eachPrefix) => eachPrefix + \"$property should not be empty\", validationOptions)\n        },\n        validationOptions\n    );\n}\n"],"sourceRoot":"../.."}